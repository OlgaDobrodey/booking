@startuml

actor "Owner" as user
participant "Gateway" as gw
participant "Hotel App" as hs
participant "Booking App" as bs

database "HotelDB" as hb
database "BookingDB" as bb


==Updating requirements for rent room==
    activate user
user -> gw: PUT /rooms/{id}/requirements
    activate gw
gw -> hs: send request to\n change requirements\n for rent room
    activate hs
hs-> hb: update the requirements for rent room
    activate hb
hb -> hs: return room
    deactivate hb
hs -> bs: send request to\n find all future\n booking for room
    activate bs
bs -> bb: select all future booking for room
    activate bb
bb -> bs: return booking list
    deactivate bb
alt <font color=red> if booking can be executed in new conditions
bs -> hs: return Message: booking unchanged
hs -> gw: return Message: booking unchanged
gw -> user:  return Message: booking unchanged
end

alt <font color=red>if booking can not be executed in new conditions
bs -> bs: function updating\nroom in booking

bs -> hs: return booking view
    deactivate bs
hs -> gw: return booking view
    deactivate hs
gw -> user: return booking view
end
    activate gw
    deactivate user

@enduml